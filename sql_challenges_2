1. Write an SQL query to display the correct message (meaningful message) from the input comments_and_translation table.

    create table comments_and_translations
    (
    	id				int,
    	comment			varchar(100),
    	translation		varchar(100)
    );



SOLUTION 1 - using COALESCE: 
SELECT 
	COALESCE(translation, comment) AS output
FROM comments_and_translations;

SOLUTION 2 - using CASE statement:
SELECT 
	CASE WHEN translation is NULL
		 THEN comment
		 ELSE translation END AS output
FROM comments_and_translations;





QUESTION 2. Write a SQL Query to fetch all the duplicate records in a table.

Table structure 

create table users
(
user_id int primary key,
user_name varchar(30) not null,
email varchar(50));


SOLUTION - 1 
WITH cte AS (
		SELECT *, 
	    ROW_NUMBER() OVER(PARTITION BY email ORDER BY user_name DESC) AS acc_no
		FROM users)

SELECT user_id, user_name, email
FROM cte
WHERE acc_no <> 1;


SOLUTION 2

SELECT user_id, user_name, email 
FROM (
		SELECT *, 
	    ROW_NUMBER() OVER(PARTITION BY email ORDER BY user_name DESC) AS acc_no
		FROM users) X
WHERE x.acc_no <> 1;


QUESTION 3. Write a SQL query to display only the details of employees who either earn the highest salary or the 
lowest salary in each department from the employee table.

Tables Structure:

drop table employee_tbl;
create table employee_tbl
( emp_ID int primary key
, emp_NAME varchar(50) not null
, DEPT_NAME varchar(50)
, SALARY int);

SOLUTION 1 - USING OFFSET & SUB QUERIES
SELECT * 
FROM employee_tbl 
WHERE emp_id = (
		SELECT emp_id
		FROM employee_tbl 
		ORDER BY 1 DESC
		LIMIT 1
		OFFSET 1
			)

SOLUTION 2 - USING COMMON TABLE EXPRESSIONS & WINDOW FUNCTIONS 

WITH cte AS (
		SELECT *, 
		ROW_NUMBER() OVER(ORDER BY emp_id DESC) AS rno
		FROM employee_tbl
		)
SELECT * 
FROM cte 
WHERE rno =2

QUESTION 4: From the doctors table, fetch the details of doctors who work in the same hospital but in different speciality.

Tables Structure
create table doctors
(
id int primary key,
name varchar(50) not null,
speciality varchar(100),
hospital varchar(50),
city varchar(50),
consultation_fee int
);

SOLUTION 
SELECT d1.* 
FROM doctors d1 
JOIN doctors d2 
ON d1.hospital = d2.hospital AND d1.speciality <> d2.speciality
