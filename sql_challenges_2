1. Write an SQL query to display the correct message (meaningful message) from the input comments_and_translation table.

    drop table comments_and_translations;
    create table comments_and_translations
    (
    	id				int,
    	comment			varchar(100),
    	translation		varchar(100)
    );

    insert into comments_and_translations values
    (1, 'very good', null),
    (2, 'good', null),
    (3, 'bad', null),
    (4, 'ordinary', null),
    (5, 'cdcdcdcd', 'very bad'),
    (6, 'excellent', null),
    (7, 'ababab', 'not satisfied'),
    (8, 'satisfied', null),
    (9, 'aabbaabb', 'extraordinary'),
    (10, 'ccddccbb', 'medium');
    commit;

SOLUTION 1 - using COALESCE: 
SELECT 
	COALESCE(translation, comment) AS output
FROM comments_and_translations;

SOLUTION 2 - using CASE statement:
SELECT 
	CASE WHEN translation is NULL
		 THEN comment
		 ELSE translation END AS output
FROM comments_and_translations;





2. Write a SQL Query to fetch all the duplicate records in a table.

Table structure 

drop table users;
create table users
(
user_id int primary key,
user_name varchar(30) not null,
email varchar(50));

insert into users values
(1, 'Sumit', 'sumit@gmail.com'),
(2, 'Reshma', 'reshma@gmail.com'),
(3, 'Farhana', 'farhana@gmail.com'),
(4, 'Robin', 'robin@gmail.com'),
(5, 'Robin', 'robin@gmail.com');

select * from users;

SOLUTION - 1 
WITH cte AS (
		SELECT *, 
	    ROW_NUMBER() OVER(PARTITION BY email ORDER BY user_name DESC) AS acc_no
		FROM users)

SELECT user_id, user_name, email
FROM cte
WHERE acc_no <> 1;


SOLUTION 2

SELECT user_id, user_name, email 
FROM (
		SELECT *, 
	    ROW_NUMBER() OVER(PARTITION BY email ORDER BY user_name DESC) AS acc_no
		FROM users) X
WHERE x.acc_no <> 1;
